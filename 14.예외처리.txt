오류, 예외

Error - 시스템에서 발생하는 오류
Exception - 프로그램상 에서 통제가 가능한 오류,예외

Throwable 클래스
	- Error 클래스 - 통제 불가능
	
	
	- Exception 클래스 - 통제 가능
		- RuntimeException이 아닌 예외
			- 컴파일시에 체크되는 예외
			
		- RuntimeException
			- 컴파일시에 체크 X, 실행중에 체크 되는 예외
			
예외 처리가 안되면 -> 예외 발생 시 프로그램이 종료

try{
	// 예외, 오류가 발생 할 가능성이 있는 부분
	// throw
} catch (...예외 클래스 변수){
	// 예외, 오류 발생시 처리하는 부분
	// 프로그램 중단 X
} finally {
	// 예외, 오류가 발생하든 안하든 무조건 실행되는 영역
	// return 으로 함수 종료해도 finally는 실행된다. - 함수 종료 시켜도 finally는 무조건 실행
}

IO 스트림 -> 열면 끝나면 무조건 딷아 줘야 한다. close();  
			  -> finally에 정의

try - with - resource;
-> finally에 구현되어 있는 close 부분을 자동으로 알아서 실행

try(닫아 줘야 하는 인스턴스) {

} catch(...){

}

throw - 예외전가
	- 메소드 throw를 정의 하면 -> 메소드를 호출하는 쪽에서 적절한 예외
	처리를 할 수 있도록 미루는 것
	
사용자 정의 예외
P509 - 나혼자코딩

